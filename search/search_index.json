{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"OpenLane and Caravel Setup","text":""},{"location":"#openlane","title":"OpenLane","text":"<p>Note</p> <p>All these steps are to be follow in a debian-based distro, such as Ubuntu, Debian, Pop OS!, etc.</p> <p>To install OpenLane properly we need to follow some steps:</p>"},{"location":"#step-1-install-dependencies","title":"Step 1: Install dependencies","text":"<pre><code>$ sudo apt update                                                                   ; # Update your system\n$ sudo apt full-upgrade                                                             ; # Upgrade all your packages\n$ sudo apt install -y build-essential python3 python3-venv python3-pip make git     ; # Install some dependencies\n</code></pre> <p>OpenLane runs into a docker container, so we need to install it.</p> <pre><code>$ sudo apt remove --purge docker docker-engine docker.io containerd runc    ; # Remove old docker versions\n$ sudo apt install ca-certificates curl gnupg lsb-release                   ; # Dependencies for docker\n$ sudo mkdir -p /etc/apt/keyrings                                           ; # Create folder to add a new keyring if you do not have that folder\n$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg          ; # Getting the docker GPG key\n$ echo \\\n\"deb [arch=\"$(dpkg --print-architecture)\" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\n\"$(. /etc/os-release &amp;&amp; echo \"$VERSION_CODENAME\")\" stable\" | \\\nsudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null                  ; # Setup repository\n$ sudo apt update                                                           ; # Refresh your system\n$ sudo apt install docker-ce docker-ce-cli containerd.io docker-compose-plugin docker-buildx-plugin  ; # Install docker packages\n</code></pre> <p>Setting up docker rootless mode.</p> <pre><code>$ sudo groupadd docker                        ; # Create docker group if needed\n$ sudo usermod -aG docker $USER               ; # Add your user to the docker group\n$ newgrp docker                               ; # Activate changes to docker group\n$ docker run hello-world                      ; # Run docker image to test\n</code></pre>"},{"location":"#step-2-install-openlane","title":"Step 2: Install OpenLane","text":"<pre><code>$ mkdir eda_tools\n$ cd eda_tools\n$ git clone --depth 1 https://github.com/The-OpenROAD-Project/OpenLane.git      ; # Clone OpenLane repository\n$ cd OpenLane/\n$ echo \"export OPENLANE_ROOT=\\\"/home/\\$USER/eda_tools/OpenLane\\\"\" &gt;&gt; ~/.bashrc  ; # Add OPENLANE_ROOT path\n$ echo \"export PDK_ROOT=\\\"\\$OPENLANE_ROOT/pdks\\\"\" &gt;&gt; ~/.bashrc                  ; # Add PDK_ROOT path\n$ echo \"export PDK_PATH=\\\"\\$PDK_ROOT/sky130A\\\"\" &gt;&gt; ~/.bashrc                    ; # Add PDK_PATH path\n$ source ~/.bashrc                                                              ; # Refresh env variables\n$ make                                                ; # Install OpenLane\n$ make test                                           ; # Run OpenLane test\n</code></pre>"},{"location":"#caravel","title":"Caravel","text":""},{"location":"#step-1-install-caravel-soc","title":"Step 1: Install caravel SoC","text":"<p>To install caravel SoC framework, we should have already installed python3.6+ with pip and docker, as well.</p> <pre><code>; # Create a template going to the next URL\nhttps://github.com/efabless/caravel_user_project/generate\n$ cd eda_tools\n$ git clone &lt;your github repo&gt;\n$ cd &lt;project name&gt;\n$ mkdir dependencies\n; # Before adding this new paths, comment the ones about OpenLane\n$ echo \"export OPENLANE_ROOT=\\\"/home/\\$USER/eda_tools/OpenLane\\\"\" &gt;&gt; ~/.bashrc\n$ echo \"export PDK_ROOT=\\\"\\$OPENLANE_ROOT/pdks\\\"\" &gt;&gt; ~/.bashrc              $ echo \"export PDK_PATH=\\\"\\$PDK_ROOT/sky130A\\\"\" &gt;&gt; ~/.bashrc         $ echo \"alias mup=\\\"make user_proj_example\\\"\" &gt;&gt; ~/.bashrc\n$ echo \"alias mupw=\\\"make user_project_wrapper\\\"\" &gt;&gt; ~/.bashrc\n; # Refresh environment variables\n$ source ~/.bashrc                                              ; # Install Caravel\n$ make setup\n</code></pre>"},{"location":"#simulating-in-caravel","title":"Simulating in Caravel","text":"<p>We can run simulation of our design as well.</p> <pre><code>$ time make verify-&lt;your-tb&gt;-rtl                ; # Running simulation using RTL\n$ time verify-&lt;your-tb&gt;-gl                      ; # Running simulation using netlist\n</code></pre> <p>Info</p> <p>To generate a template, you shold have a GitHub account already created.</p>"}]}